/* tslint:disable */
/* eslint-disable */
/**
 * PocketSync API
 * API documentation for PocketSync backend services
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface ConflictDto
 */
export interface ConflictDto {
    /**
     * Unique identifier for the conflict
     * @type {string}
     * @memberof ConflictDto
     */
    'id': string;
    /**
     * Project identifier
     * @type {string}
     * @memberof ConflictDto
     */
    'projectId': string;
    /**
     * User identifier
     * @type {string}
     * @memberof ConflictDto
     */
    'userIdentifier': string;
    /**
     * Device identifier
     * @type {string}
     * @memberof ConflictDto
     */
    'deviceId': string;
    /**
     * Table name where the conflict occurred
     * @type {string}
     * @memberof ConflictDto
     */
    'tableName': string;
    /**
     * Record ID that has a conflict
     * @type {string}
     * @memberof ConflictDto
     */
    'recordId': string;
    /**
     * Client data that caused the conflict
     * @type {object}
     * @memberof ConflictDto
     */
    'clientData': object;
    /**
     * Server data that conflicts with client data
     * @type {object}
     * @memberof ConflictDto
     */
    'serverData': object;
    /**
     * Strategy used to resolve the conflict
     * @type {string}
     * @memberof ConflictDto
     */
    'resolutionStrategy': ConflictDtoResolutionStrategyEnum;
    /**
     * Data after conflict resolution
     * @type {object}
     * @memberof ConflictDto
     */
    'resolvedData': object;
    /**
     * When the conflict was detected
     * @type {string}
     * @memberof ConflictDto
     */
    'detectedAt': string;
    /**
     * When the conflict was resolved
     * @type {string}
     * @memberof ConflictDto
     */
    'resolvedAt': string;
    /**
     * Associated sync session ID
     * @type {string}
     * @memberof ConflictDto
     */
    'syncSessionId'?: string;
    /**
     * Additional metadata for the conflict
     * @type {object}
     * @memberof ConflictDto
     */
    'metadata'?: object;
}

export const ConflictDtoResolutionStrategyEnum = {
    LastWriteWins: 'LAST_WRITE_WINS',
    ClientWins: 'CLIENT_WINS',
    ServerWins: 'SERVER_WINS',
    Custom: 'CUSTOM'
} as const;

export type ConflictDtoResolutionStrategyEnum = typeof ConflictDtoResolutionStrategyEnum[keyof typeof ConflictDtoResolutionStrategyEnum];


